#docker-compose -f docker-compose.yml up --build
  #I have to execute this command in the folder where the docker-compose.yml file is located

version: '2'
services:

  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://broker:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    hostname: elasticsearch
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
    mem_limit: 1 GB
  
  kafka-topics:
    image: apache/kafka:3.7.0
    hostname: kafka-topics
    container_name: kafka-topics
    command: > 
      bash -c "
      /opt/kafka/bin/kafka-topics.sh --create --topic roads-topic --bootstrap-server broker:9092
      "
    depends_on:
      - broker
      - elasticsearch

  spark:
    build: /spark
    hostname: spark
    container_name: spark
    volumes:
      - ./spark/code:/opt/tap/code/
      - ./spark/models:/opt/tap/models/
    command: > 
      /opt/spark/bin/spark-submit --conf spark.driver.extraJavaOptions="-Divy.cache.dir=/tmp -Divy.home=/tmp" --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.1,org.elasticsearch:elasticsearch-spark-30_2.12:8.13.4  /opt/tap/code/from_kafka_to_es.py
    depends_on:
      kafka-topics:
        condition: service_completed_successfully

  addresses_info:
      build: /python
      hostname: addresses_info
      container_name: addresses_info
      environment: 
        - PYTHON_APP=address_info_collector.py
        - PYTHONUNBUFFERED=1
        - MY_MODE_VAR=Demo
      volumes:
        - ./python/bin:/usr/src/app/bin
        - ./python/keys:/usr/src/app/keys
        - ./python/input_data:/usr/src/app/input_data
      depends_on:
        kafka-topics:
          condition: service_completed_successfully

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.0
    hostname: logstash
    container_name: logstash
    environment:
      XPACK_MONITORING_ENABLED: "false"
    ports:
      - 9090:9090
    volumes:
      - ./logstash:/usr/share/logstash/pipeline/
    depends_on:
      kafka-topics:
        condition: service_completed_successfully

  kibana:
    hostname: kibana
    image: docker.elastic.co/kibana/kibana:8.13.4
    ports:
      - 5601:5601
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
        kafka-topics:
          condition: service_completed_successfully